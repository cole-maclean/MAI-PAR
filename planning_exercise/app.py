import json
import flask
from flask import request
from Planner import Planner


app = flask.Flask(__name__)

@app.route("/")
def index():
    """
    When you request the index path, you'll get the index.html template. This is the office configuration page, allowing the user to input robot location, coffee machines and petitions
    """
    robot_cell = request.args.get('robot_cell', '')
    if len(robot_cell)==0: robot_cell="0" #default robot to first office
    return flask.render_template("index.html",robot_cell=robot_cell,machines="",petitions="")

@app.route("/runplan")
def runplan():
    #initial call to runplan which displays the planner simulation
    robot_cell = request.args.get('robot_cell','')
    petitions = request.args.get('petitions','')
    machines = request.args.get('machines','')
    return flask.render_template("runplan.html",robot_cell=robot_cell,machines=machines,petitions=petitions)

@app.route("/gdata")
def gdata():
    """
    Data request url for d3 to receive required plan data. Data is generated by parsing the user inputted robot location, machines and petitions and running the Planner class build_plan method on the initial state.
    The returned plan object is passed as dumped json to /runplan d3.json method
    """
    robot_cell = request.args.get('robot_cell','')
    petitions = [int(pet) for pet in request.args.get('petitions','')]
    machines = [int(mach) for mach in request.args.get('machines','')]
    parsed_petitions = {i:petition_count for i,petition_count in enumerate(petitions) if petition_count > 0}
    parsed_machines = {i:machine_count for i,machine_count in enumerate(machines) if machine_count > 0}
    initial_state = {'robot-location':int(robot_cell),'robot-free':True,'robot-loaded':0,'petitions':parsed_petitions,'served':[],'machines':parsed_machines,'steps':0}
    plan = Planner(initial_state,36).build_plan()
    return json.dumps(plan)


if __name__ == "__main__":
    import os

    port = 8000

    # Open a web browser pointing at the app.
    #os.system("open http://localhost:{0}/".format(port))

    # Set up the development server on port 8000.
    app.debug = True
    app.run()



